
stages:
  - build

develop-container:
  image: registry.gitlab.com/mostlybroken/robertusfaber/dockerx-linux:latest
  stage: build
  services:
    - name: registry.gitlab.com/mostlybroken/dindproxy:latest
      alias: docker
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker context create pi-environment
    - docker buildx create --name multiarch-builder --driver docker-container --use pi-environment
    - docker buildx build --platform linux/amd64,linux/arm64 -f Dockerfile -t $IMAGE_TAG --pull --push .
  tags:
    - MostlyBroken
    - amd64
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:testing

release-container:
  image: registry.gitlab.com/mostlybroken/robertusfaber/dockerx-linux:latest
  stage: build
  services:
    - name: registry.gitlab.com/mostlybroken/dindproxy:latest
      alias: docker
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  script:
    - major=`echo ${CI_COMMIT_TAG:1} | cut -d. -f1`
    - minor=`echo $CI_COMMIT_TAG | cut -d. -f2`
    - patch=`echo $CI_COMMIT_TAG | cut -d. -f3`
    - tag_list=$(
        echo -n " -t $IMAGE_NAME:$major.$minor.$patch";
        if [ -z "${patch//[0-9]}" ]; then
          echo -n " -t $IMAGE_NAME:$major.$minor";
          echo -n " -t $IMAGE_NAME:$major";
          if [ $major -ge 0 ]; then
            echo -n " -t $IMAGE_NAME:latest";
          fi
        fi
      )
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker context create pi-environment
    - docker buildx create --name multiarch-builder --driver docker-container --use pi-environment
    - docker buildx build --platform linux/amd64,linux/arm64 -f Dockerfile $tag_list --pull --push .
  tags:
    - MostlyBroken
    - amd64
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/'
